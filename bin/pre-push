#!/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

set -e

remote="$1"
url="$2"

branch=$(git rev-parse --abbrev-ref HEAD)
docs="https://massenz.github.io/SimpleApiServer/"

if [[ "${branch}" == "gh-pages" ]]; then
    # We are pushing docs, no need to build/test.
    exit 0
fi

echo -e "\n=======================\n[INFO] Pushing changes from ${branch}\n\n"

./bin/build && ./bin/test && ./bin/publish_docs > /dev/null

echo -e "\n\n[SUCCESS] All tests passed; docs published to ${docs}\n\n=======================\n"
